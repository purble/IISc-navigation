turningWithFiducial: True
junctionTurning_fiducial_detected_list_size: 80
junctionTurning_fiducial_detection_thresh: 4

# PID parameters for yaw control
p_yaw: 0.05
i_yaw: 0.0005
d_yaw: 0.001

# PID parameters for control towards setpoint in xy plane
p_xy: 0.05
i_xy: 0.0005
d_xy: 0.001

#####################################
##### Junction calibration info #####
#####################################

# A280
# High voltage
# pad_ids = [0] # marker id list [0,3,4]
# pad_turn_dir = [False] # direction to turn True:Right, False:Left [True, False, True]
# yaw_values = [.99]
# pad_dist_det = [8.0]
# pad_dist_turn = [3.0] # dist to turn from marker [1.5,2.0,1.0]

# RBCCPS
# junc_calibration: {0: 
#   { 'anchor_ids': [0,1,2], 'nav_dir_ref':  }
# }

# junc_ids: [0, 1] # IDs to characterize each junction
# anchor_ids: [[0,1,2], [3,4,5]] # First anchor is at (0,0), second at (x,0), third at (0,y)
# nav_dir_ref: [[[, ], [, ], [, ]], [[, ], [, ]]] # Reference points to figure the path of arrival at a junction
# anchor_conf_side: [[4.0,5.0], [6.0, 3.0]] # [x,y] values for each triplet of anchors
# junc_dist_thresh: [[1.0, 1.0, 2.0], [1.0, 1.0]] # Start UWB based motion once close enough to first waypoint
# junc_waypoints: [[[], [], []], [[], []]] # Set of waypoints to follow once a reference point is reached, last is the cenre of the junciton
# diff_dirn_ref_yaw: [[, , ], [, ]] # The yaw value to set PID controller upon while arriving from different paths at a junction
# junc_turning_angles: [[, , ], [, ]] # Final yaw value to achieve while arriving from different approaches at junction
# junc_calib_angles: [[], []] # Angle angle of line between (0,0) anchor and (x,0), and magnetic north as seen from Bebop's magnetometer
